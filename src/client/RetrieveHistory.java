/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author jack1
 */
public class RetrieveHistory extends javax.swing.JFrame {

    /**
     * This class is used as ClientImplGUI will auto refreshed for every second. Therefore, the scrollbar for textPane cannot always
     * at the bottom. Therefore, we decided to keep 5 messages in total in the current view, and save all the histories here.
     */
    
    private commonInterface chat;
    private List<MessageInfo> historyMessages = new ArrayList<>();
    public RetrieveHistory(commonInterface chat) throws RemoteException {
        this.chat=chat;
        initComponents();
        initFrame();
        setHistories();
    }
    
    
    void initFrame(){
        
        this.setVisible(true);
        this.setDefaultCloseOperation(this.HIDE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("Retrieve Histories");      
    
    }
    
    void setHistories() throws RemoteException{
               
        String history = "<html><body>";
        SimpleDateFormat pf = new SimpleDateFormat("HH:mm:ss");
        historyMessages = chat.getAllMessages();
        
        for (int i = 0; i < historyMessages.size(); i++) {
             
                
            if (historyMessages.get(i).getEmoji()==null){
                    history += "<p style='color:blue;padding:0px;margin:0px'>"
                            + "On "
                            + pf.format(historyMessages.get(i).getDate())
                            + ", "
                            + historyMessages.get(i).getUserName()
                            + ": </p>"
                            + "<p style='padding:0px; margin:0px'>"
                            + historyMessages.get(i).getMessage()
                            + "</p><br/>";
               
            }   
            
            else{
                 history += "<p style='color:blue;padding:0px;margin:0px'>"
                            + "On "
                            + pf.format(historyMessages.get(i).getDate())
                            + ", "
                            + historyMessages.get(i).getUserName()
                            + ": </p>"                        
                            + historyMessages.get(i).getEmoji()
                            + "<br/>";
                
            }

        }
        history += "</body></html>";
        this.historyBoard.setText(history);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        historyBoard = new javax.swing.JTextPane();
        nameLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        historyBoard.setContentType("text/html"); // NOI18N
        jScrollPane1.setViewportView(historyBoard);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 590, 440));

        nameLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        nameLabel1.setForeground(new java.awt.Color(255, 255, 255));
        nameLabel1.setText("All Histories");
        getContentPane().add(nameLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 190, 180, 70));

        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton1.setText("Back>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(907, 460, 70, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/source/mainbackground.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane historyBoard;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel1;
    // End of variables declaration//GEN-END:variables
}
